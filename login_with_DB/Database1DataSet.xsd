<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="Database1DataSet" targetNamespace="http://tempuri.org/Database1DataSet.xsd" xmlns:mstns="http://tempuri.org/Database1DataSet.xsd" xmlns="http://tempuri.org/Database1DataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="Database1ConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="Database1ConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.login_with_DB.Properties.Settings.GlobalReference.Default.Database1ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="table_useraccountsTableAdapter" GeneratorDataComponentClassName="table_useraccountsTableAdapter" Name="table_useraccounts" UserDataComponentName="table_useraccountsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.table_useraccounts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[table_useraccounts] WHERE (([user_accountid] = @Original_user_accountid) AND ([user_accountname] = @Original_user_accountname) AND ([user_accountpassword] = @Original_user_accountpassword))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_user_accountid" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="user_accountid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_user_accountname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_accountname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_user_accountpassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_accountpassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[table_useraccounts] ([user_accountname], [user_accountpassword]) VALUES (@user_accountname, @user_accountpassword);
SELECT user_accountid, user_accountname, user_accountpassword FROM table_useraccounts WHERE (user_accountid = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@user_accountname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_accountname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@user_accountpassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_accountpassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT user_accountid, user_accountname, user_accountpassword FROM dbo.table_useraccounts</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[table_useraccounts] SET [user_accountname] = @user_accountname, [user_accountpassword] = @user_accountpassword WHERE (([user_accountid] = @Original_user_accountid) AND ([user_accountname] = @Original_user_accountname) AND ([user_accountpassword] = @Original_user_accountpassword));
SELECT user_accountid, user_accountname, user_accountpassword FROM table_useraccounts WHERE (user_accountid = @user_accountid)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@user_accountname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_accountname" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@user_accountpassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_accountpassword" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int64" Direction="Input" ParameterName="@Original_user_accountid" Precision="0" ProviderType="BigInt" Scale="0" Size="0" SourceColumn="user_accountid" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_user_accountname" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_accountname" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_user_accountpassword" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="user_accountpassword" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="user_accountid" ColumnName="user_accountid" DataSourceName="[C:\USERS\JULET\DESKTOP\WORKSPACE\JULETTESENSAY27\C# APPS\LOGIN_WITH_DB\LOGIN_WITH_DB\DATABASE1.MDF].dbo.table_useraccounts" DataTypeServer="bigint" DbType="Int64" Direction="Input" ParameterName="@user_accountid" Precision="0" ProviderType="BigInt" Scale="0" Size="8" SourceColumn="user_accountid" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="user_accountid" DataSetColumn="user_accountid" />
              <Mapping SourceColumn="user_accountname" DataSetColumn="user_accountname" />
              <Mapping SourceColumn="user_accountpassword" DataSetColumn="user_accountpassword" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="check_userexistsTableAdapter" GeneratorDataComponentClassName="check_userexistsTableAdapter" Name="check_userexists" UserDataComponentName="check_userexistsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.check_userexists" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.check_userexists</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="varchar" DbType="AnsiString" Direction="Input" ParameterName="@user_accountname" Precision="0" ProviderType="VarChar" Scale="0" Size="250" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="result" DataSetColumn="result" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="get_userpasswordTableAdapter" GeneratorDataComponentClassName="get_userpasswordTableAdapter" Name="get_userpassword" UserDataComponentName="get_userpasswordTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="Database1ConnectionString (Settings)" DbObjectName="dbo.get_userpassword" DbObjectType="StoredProcedure" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="StoredProcedure" ModifiedByUser="false">
                    <CommandText>dbo.get_userpassword</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="ReturnValue" ParameterName="@RETURN_VALUE" Precision="10" ProviderType="Int" Scale="0" Size="4" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DataTypeServer="varchar" DbType="AnsiString" Direction="Input" ParameterName="@user_accountname" Precision="0" ProviderType="VarChar" Scale="0" Size="250" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="result" DataSetColumn="result" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="Database1DataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="Database1DataSet" msprop:Generator_DataSetName="Database1DataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="table_useraccounts" msprop:Generator_RowEvHandlerName="table_useraccountsRowChangeEventHandler" msprop:Generator_RowDeletedName="table_useraccountsRowDeleted" msprop:Generator_RowDeletingName="table_useraccountsRowDeleting" msprop:Generator_RowEvArgName="table_useraccountsRowChangeEvent" msprop:Generator_TablePropName="table_useraccounts" msprop:Generator_RowChangedName="table_useraccountsRowChanged" msprop:Generator_RowChangingName="table_useraccountsRowChanging" msprop:Generator_TableClassName="table_useraccountsDataTable" msprop:Generator_RowClassName="table_useraccountsRow" msprop:Generator_TableVarName="tabletable_useraccounts" msprop:Generator_UserTableName="table_useraccounts">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="user_accountid" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="user_accountid" msprop:Generator_ColumnPropNameInTable="user_accountidColumn" msprop:Generator_ColumnVarNameInTable="columnuser_accountid" msprop:Generator_UserColumnName="user_accountid" type="xs:long" />
              <xs:element name="user_accountname" msprop:Generator_ColumnPropNameInRow="user_accountname" msprop:Generator_ColumnPropNameInTable="user_accountnameColumn" msprop:Generator_ColumnVarNameInTable="columnuser_accountname" msprop:Generator_UserColumnName="user_accountname">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="user_accountpassword" msprop:Generator_ColumnPropNameInRow="user_accountpassword" msprop:Generator_ColumnPropNameInTable="user_accountpasswordColumn" msprop:Generator_ColumnVarNameInTable="columnuser_accountpassword" msprop:Generator_UserColumnName="user_accountpassword">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="check_userexists" msprop:Generator_RowEvHandlerName="check_userexistsRowChangeEventHandler" msprop:Generator_RowDeletedName="check_userexistsRowDeleted" msprop:Generator_RowDeletingName="check_userexistsRowDeleting" msprop:Generator_RowEvArgName="check_userexistsRowChangeEvent" msprop:Generator_TablePropName="check_userexists" msprop:Generator_RowChangedName="check_userexistsRowChanged" msprop:Generator_RowChangingName="check_userexistsRowChanging" msprop:Generator_TableClassName="check_userexistsDataTable" msprop:Generator_RowClassName="check_userexistsRow" msprop:Generator_TableVarName="tablecheck_userexists" msprop:Generator_UserTableName="check_userexists">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="result" msdata:ReadOnly="true" msprop:Generator_ColumnPropNameInRow="result" msprop:Generator_ColumnPropNameInTable="resultColumn" msprop:Generator_ColumnVarNameInTable="columnresult" msprop:Generator_UserColumnName="result" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="get_userpassword" msprop:Generator_RowEvHandlerName="get_userpasswordRowChangeEventHandler" msprop:Generator_RowDeletedName="get_userpasswordRowDeleted" msprop:Generator_RowDeletingName="get_userpasswordRowDeleting" msprop:Generator_RowEvArgName="get_userpasswordRowChangeEvent" msprop:Generator_TablePropName="get_userpassword" msprop:Generator_RowChangedName="get_userpasswordRowChanged" msprop:Generator_RowChangingName="get_userpasswordRowChanging" msprop:Generator_TableClassName="get_userpasswordDataTable" msprop:Generator_RowClassName="get_userpasswordRow" msprop:Generator_TableVarName="tableget_userpassword" msprop:Generator_UserTableName="get_userpassword">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="result" msprop:Generator_ColumnPropNameInRow="result" msprop:Generator_ColumnPropNameInTable="resultColumn" msprop:Generator_ColumnVarNameInTable="columnresult" msprop:Generator_UserColumnName="result">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="250" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:table_useraccounts" />
      <xs:field xpath="mstns:user_accountid" />
    </xs:unique>
  </xs:element>
</xs:schema>